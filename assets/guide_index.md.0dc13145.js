import{_ as n,c as a,o as s,a as t}from"./app.96a1fd16.js";const m='{"title":"Guide","description":"","frontmatter":{},"headers":[{"level":2,"title":"Getting Started","slug":"getting-started"},{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Selectively ignoring automatic formatting","slug":"selectively-ignoring-automatic-formatting"},{"level":2,"title":"Type support in configuration file","slug":"type-support-in-configuration-file"}],"relativePath":"guide/index.md"}',e={},p=t(`<h1 id="guide" tabindex="-1">Guide <a class="header-anchor" href="#guide" aria-hidden="true">#</a></h1><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h2><p>Simply install <code>prettier</code> and <code>@prettier/plugin-pug</code> as your project\u2019s npm <code>devDependencies</code>:</p><div class="language-bash"><pre><code><span class="token function">npm</span> <span class="token function">add</span> --save-dev prettier @prettier/plugin-pug
<span class="token function">yarn</span> <span class="token function">add</span> --dev prettier @prettier/plugin-pug
<span class="token function">pnpm</span> <span class="token function">add</span> --save-dev prettier @prettier/plugin-pug
</code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p>Format all pug files in your project:</p><div class="language-bash"><pre><code>npx prettier --write <span class="token string">&quot;**/*.pug&quot;</span>
<span class="token function">yarn</span> prettier --write <span class="token string">&quot;**/*.pug&quot;</span>
<span class="token function">pnpm</span> prettier --write <span class="token string">&quot;**/*.pug&quot;</span>
</code></pre></div><h3 id="selectively-ignoring-automatic-formatting" tabindex="-1">Selectively ignoring automatic formatting <a class="header-anchor" href="#selectively-ignoring-automatic-formatting" aria-hidden="true">#</a></h3><p>You can disable code formatting for a particular element by adding <code>//- prettier-ignore</code> comments in your pug templates:</p><div class="language-pug"><pre><code><span class="token tag">div<span class="token attr-class">.text</span><span class="token attributes"><span class="token punctuation">(</span> <span class="token attr-name">color</span> <span class="token punctuation">=</span>   <span class="token attr-value"><span class="token string">&quot;primary&quot;</span></span><span class="token punctuation">,</span>  <span class="token attr-name">disabled</span>  <span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&quot;true&quot;</span>  </span><span class="token punctuation">)</span></span></span>
<span class="token comment">//- prettier-ignore</span>
<span class="token tag">div<span class="token attr-class">.text</span><span class="token attributes"><span class="token punctuation">(</span> <span class="token attr-name">color</span> <span class="token punctuation">=</span>   <span class="token attr-value"><span class="token string">&quot;primary&quot;</span></span><span class="token punctuation">,</span>  <span class="token attr-name">disabled</span>  <span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&quot;true&quot;</span>  </span><span class="token punctuation">)</span></span></span>
<span class="token comment">//- prettier-ignore: because of reasons</span>
<span class="token tag">div</span>
  <span class="token tag">div<span class="token attr-class">.text</span><span class="token attributes"><span class="token punctuation">(</span> <span class="token attr-name">color</span> <span class="token punctuation">=</span>   <span class="token attr-value"><span class="token string">&quot;primary&quot;</span></span><span class="token punctuation">,</span>  <span class="token attr-name">disabled</span>  <span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&quot;true&quot;</span>  </span><span class="token punctuation">)</span></span></span>
</code></pre></div><p>Prettified output:</p><div class="language-pug"><pre><code><span class="token tag"><span class="token attr-class">.text</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">color</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&quot;primary&quot;</span></span><span class="token punctuation">,</span> <span class="token attr-name">disabled</span><span class="token punctuation">)</span></span></span>
<span class="token comment">//- prettier-ignore</span>
<span class="token tag">div<span class="token attr-class">.text</span><span class="token attributes"><span class="token punctuation">(</span> <span class="token attr-name">color</span> <span class="token punctuation">=</span>   <span class="token attr-value"><span class="token string">&quot;primary&quot;</span></span><span class="token punctuation">,</span>  <span class="token attr-name">disabled</span>  <span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&quot;true&quot;</span>  </span><span class="token punctuation">)</span></span></span>
<span class="token comment">//- prettier-ignore: because of reasons</span>
<span class="token tag">div</span>
  <span class="token tag">div<span class="token attr-class">.text</span><span class="token attributes"><span class="token punctuation">(</span> <span class="token attr-name">color</span> <span class="token punctuation">=</span>   <span class="token attr-value"><span class="token string">&quot;primary&quot;</span></span><span class="token punctuation">,</span>  <span class="token attr-name">disabled</span>  <span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&quot;true&quot;</span>  </span><span class="token punctuation">)</span></span></span>
</code></pre></div><p>You can also disable code formatting in Markdown for a particular <code>\`\`\`pug</code> block by adding<code>&lt;!-- prettier-ignore --&gt;</code> before the block:</p><div class="language-markdown"><pre><code>Pug code with preserved custom formatting:

<span class="token comment">&lt;!-- prettier-ignore --&gt;</span>
<span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">pug</span>
<span class="token code-block language-pug"><span class="token tag">div<span class="token attr-class">.text</span><span class="token attributes"><span class="token punctuation">(</span> <span class="token attr-name">color</span> <span class="token punctuation">=</span>   <span class="token attr-value"><span class="token string">&quot;primary&quot;</span></span><span class="token punctuation">,</span>  <span class="token attr-name">disabled</span>  <span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&quot;true&quot;</span>  </span><span class="token punctuation">)</span></span></span></span>
<span class="token punctuation">\`\`\`</span></span>

Pug code with automatic formatting:

<span class="token code"><span class="token punctuation">\`\`\`</span><span class="token code-language">pug</span>
<span class="token code-block language-pug"><span class="token tag"><span class="token attr-class">.text</span><span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">color</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token string">&quot;primary&quot;</span></span><span class="token punctuation">,</span> <span class="token attr-name">disabled</span><span class="token punctuation">)</span></span></span></span>
<span class="token punctuation">\`\`\`</span></span>
</code></pre></div><h2 id="type-support-in-configuration-file" tabindex="-1">Type support in configuration file <a class="header-anchor" href="#type-support-in-configuration-file" aria-hidden="true">#</a></h2><p>You can write your <code>.prettierrc.cjs</code> like this to get fully type check support with documentation:</p><div class="language-js"><pre><code><span class="token comment">// @ts-check</span>
<span class="token comment">/// &lt;reference types=&quot;@prettier/plugin-pug/src/prettier&quot; /&gt;</span>

<span class="token comment">/**
 * @type {import(&#39;prettier&#39;).Options}
 */</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \`require.resolve\` is needed for e.g. \`pnpm\`</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;@prettier/plugin-pug&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token literal-property property">printWidth</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
  <span class="token literal-property property">singleQuote</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

  <span class="token literal-property property">pugSingleQuote</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token comment">// ... more pug* options</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,17),o=[p];function c(l,r,i,u,k,d){return s(),a("div",null,o)}var v=n(e,[["render",c]]);export{m as __pageData,v as default};
